// source: massing.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.pulsar.massing.BoundaryPlane', null, global);
goog.exportSymbol('proto.pulsar.massing.CreateMassingConfigurationRequest', null, global);
goog.exportSymbol('proto.pulsar.massing.CreateMassingRequest', null, global);
goog.exportSymbol('proto.pulsar.massing.DeleteMassingConfigurationRequest', null, global);
goog.exportSymbol('proto.pulsar.massing.DeleteMassingRequest', null, global);
goog.exportSymbol('proto.pulsar.massing.GetMassingConfigurationRequest', null, global);
goog.exportSymbol('proto.pulsar.massing.ListMassingConfigurationsRequest', null, global);
goog.exportSymbol('proto.pulsar.massing.ListMassingConfigurationsResponse', null, global);
goog.exportSymbol('proto.pulsar.massing.Massing', null, global);
goog.exportSymbol('proto.pulsar.massing.Massing.FormCase', null, global);
goog.exportSymbol('proto.pulsar.massing.MassingConfiguration', null, global);
goog.exportSymbol('proto.pulsar.massing.MassingType', null, global);
goog.exportSymbol('proto.pulsar.massing.Point2D', null, global);
goog.exportSymbol('proto.pulsar.massing.PolygonalMassing', null, global);
goog.exportSymbol('proto.pulsar.massing.SpineMassing', null, global);
goog.exportSymbol('proto.pulsar.massing.UpdateMassingConfigurationRequest', null, global);
goog.exportSymbol('proto.pulsar.massing.UpdateMassingRequest', null, global);
goog.exportSymbol('proto.pulsar.massing.UsageType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.Point2D = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.massing.Point2D, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.Point2D.displayName = 'proto.pulsar.massing.Point2D';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.MassingConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulsar.massing.MassingConfiguration.repeatedFields_, null);
};
goog.inherits(proto.pulsar.massing.MassingConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.MassingConfiguration.displayName = 'proto.pulsar.massing.MassingConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.Massing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pulsar.massing.Massing.oneofGroups_);
};
goog.inherits(proto.pulsar.massing.Massing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.Massing.displayName = 'proto.pulsar.massing.Massing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.SpineMassing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulsar.massing.SpineMassing.repeatedFields_, null);
};
goog.inherits(proto.pulsar.massing.SpineMassing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.SpineMassing.displayName = 'proto.pulsar.massing.SpineMassing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.PolygonalMassing = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulsar.massing.PolygonalMassing.repeatedFields_, null);
};
goog.inherits(proto.pulsar.massing.PolygonalMassing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.PolygonalMassing.displayName = 'proto.pulsar.massing.PolygonalMassing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.BoundaryPlane = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulsar.massing.BoundaryPlane.repeatedFields_, null);
};
goog.inherits(proto.pulsar.massing.BoundaryPlane, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.BoundaryPlane.displayName = 'proto.pulsar.massing.BoundaryPlane';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.CreateMassingConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.massing.CreateMassingConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.CreateMassingConfigurationRequest.displayName = 'proto.pulsar.massing.CreateMassingConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.GetMassingConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.massing.GetMassingConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.GetMassingConfigurationRequest.displayName = 'proto.pulsar.massing.GetMassingConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.UpdateMassingConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.massing.UpdateMassingConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.UpdateMassingConfigurationRequest.displayName = 'proto.pulsar.massing.UpdateMassingConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.DeleteMassingConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.massing.DeleteMassingConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.DeleteMassingConfigurationRequest.displayName = 'proto.pulsar.massing.DeleteMassingConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.ListMassingConfigurationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.massing.ListMassingConfigurationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.ListMassingConfigurationsRequest.displayName = 'proto.pulsar.massing.ListMassingConfigurationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.ListMassingConfigurationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulsar.massing.ListMassingConfigurationsResponse.repeatedFields_, null);
};
goog.inherits(proto.pulsar.massing.ListMassingConfigurationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.ListMassingConfigurationsResponse.displayName = 'proto.pulsar.massing.ListMassingConfigurationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.CreateMassingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.massing.CreateMassingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.CreateMassingRequest.displayName = 'proto.pulsar.massing.CreateMassingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.UpdateMassingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.massing.UpdateMassingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.UpdateMassingRequest.displayName = 'proto.pulsar.massing.UpdateMassingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.massing.DeleteMassingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.massing.DeleteMassingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.massing.DeleteMassingRequest.displayName = 'proto.pulsar.massing.DeleteMassingRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.Point2D.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.Point2D.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.Point2D} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.Point2D.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.Point2D}
 */
proto.pulsar.massing.Point2D.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.Point2D;
  return proto.pulsar.massing.Point2D.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.Point2D} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.Point2D}
 */
proto.pulsar.massing.Point2D.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.Point2D.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.Point2D.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.Point2D} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.Point2D.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.pulsar.massing.Point2D.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.massing.Point2D} returns this
 */
proto.pulsar.massing.Point2D.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.pulsar.massing.Point2D.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.massing.Point2D} returns this
 */
proto.pulsar.massing.Point2D.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulsar.massing.MassingConfiguration.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.MassingConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.MassingConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.MassingConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.MassingConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    massingsList: jspb.Message.toObjectList(msg.getMassingsList(),
    proto.pulsar.massing.Massing.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.MassingConfiguration}
 */
proto.pulsar.massing.MassingConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.MassingConfiguration;
  return proto.pulsar.massing.MassingConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.MassingConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.MassingConfiguration}
 */
proto.pulsar.massing.MassingConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = new proto.pulsar.massing.Massing;
      reader.readMessage(value,proto.pulsar.massing.Massing.deserializeBinaryFromReader);
      msg.addMassings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.MassingConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.MassingConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.MassingConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.MassingConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMassingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.pulsar.massing.Massing.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pulsar.massing.MassingConfiguration.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.MassingConfiguration} returns this
 */
proto.pulsar.massing.MassingConfiguration.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.pulsar.massing.MassingConfiguration.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.MassingConfiguration} returns this
 */
proto.pulsar.massing.MassingConfiguration.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Massing massings = 3;
 * @return {!Array<!proto.pulsar.massing.Massing>}
 */
proto.pulsar.massing.MassingConfiguration.prototype.getMassingsList = function() {
  return /** @type{!Array<!proto.pulsar.massing.Massing>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulsar.massing.Massing, 3));
};


/**
 * @param {!Array<!proto.pulsar.massing.Massing>} value
 * @return {!proto.pulsar.massing.MassingConfiguration} returns this
*/
proto.pulsar.massing.MassingConfiguration.prototype.setMassingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.pulsar.massing.Massing=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulsar.massing.Massing}
 */
proto.pulsar.massing.MassingConfiguration.prototype.addMassings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.pulsar.massing.Massing, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulsar.massing.MassingConfiguration} returns this
 */
proto.pulsar.massing.MassingConfiguration.prototype.clearMassingsList = function() {
  return this.setMassingsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pulsar.massing.Massing.oneofGroups_ = [[3,4]];

/**
 * @enum {number}
 */
proto.pulsar.massing.Massing.FormCase = {
  FORM_NOT_SET: 0,
  SPINE: 3,
  POLYGONAL: 4
};

/**
 * @return {proto.pulsar.massing.Massing.FormCase}
 */
proto.pulsar.massing.Massing.prototype.getFormCase = function() {
  return /** @type {proto.pulsar.massing.Massing.FormCase} */(jspb.Message.computeOneofCase(this, proto.pulsar.massing.Massing.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.Massing.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.Massing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.Massing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.Massing.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    spine: (f = msg.getSpine()) && proto.pulsar.massing.SpineMassing.toObject(includeInstance, f),
    polygonal: (f = msg.getPolygonal()) && proto.pulsar.massing.PolygonalMassing.toObject(includeInstance, f),
    massingType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    usageType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    numberOfFloors: jspb.Message.getFieldWithDefault(msg, 8, 0),
    floorHeight: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.Massing}
 */
proto.pulsar.massing.Massing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.Massing;
  return proto.pulsar.massing.Massing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.Massing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.Massing}
 */
proto.pulsar.massing.Massing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = new proto.pulsar.massing.SpineMassing;
      reader.readMessage(value,proto.pulsar.massing.SpineMassing.deserializeBinaryFromReader);
      msg.setSpine(value);
      break;
    case 4:
      var value = new proto.pulsar.massing.PolygonalMassing;
      reader.readMessage(value,proto.pulsar.massing.PolygonalMassing.deserializeBinaryFromReader);
      msg.setPolygonal(value);
      break;
    case 5:
      var value = /** @type {!proto.pulsar.massing.MassingType} */ (reader.readEnum());
      msg.setMassingType(value);
      break;
    case 6:
      var value = /** @type {!proto.pulsar.massing.UsageType} */ (reader.readEnum());
      msg.setUsageType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumberOfFloors(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloorHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.Massing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.Massing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.Massing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.Massing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpine();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.pulsar.massing.SpineMassing.serializeBinaryToWriter
    );
  }
  f = message.getPolygonal();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.pulsar.massing.PolygonalMassing.serializeBinaryToWriter
    );
  }
  f = message.getMassingType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getUsageType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNumberOfFloors();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getFloorHeight();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pulsar.massing.Massing.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.Massing} returns this
 */
proto.pulsar.massing.Massing.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.pulsar.massing.Massing.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.Massing} returns this
 */
proto.pulsar.massing.Massing.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SpineMassing spine = 3;
 * @return {?proto.pulsar.massing.SpineMassing}
 */
proto.pulsar.massing.Massing.prototype.getSpine = function() {
  return /** @type{?proto.pulsar.massing.SpineMassing} */ (
    jspb.Message.getWrapperField(this, proto.pulsar.massing.SpineMassing, 3));
};


/**
 * @param {?proto.pulsar.massing.SpineMassing|undefined} value
 * @return {!proto.pulsar.massing.Massing} returns this
*/
proto.pulsar.massing.Massing.prototype.setSpine = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.pulsar.massing.Massing.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulsar.massing.Massing} returns this
 */
proto.pulsar.massing.Massing.prototype.clearSpine = function() {
  return this.setSpine(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.massing.Massing.prototype.hasSpine = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PolygonalMassing polygonal = 4;
 * @return {?proto.pulsar.massing.PolygonalMassing}
 */
proto.pulsar.massing.Massing.prototype.getPolygonal = function() {
  return /** @type{?proto.pulsar.massing.PolygonalMassing} */ (
    jspb.Message.getWrapperField(this, proto.pulsar.massing.PolygonalMassing, 4));
};


/**
 * @param {?proto.pulsar.massing.PolygonalMassing|undefined} value
 * @return {!proto.pulsar.massing.Massing} returns this
*/
proto.pulsar.massing.Massing.prototype.setPolygonal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.pulsar.massing.Massing.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulsar.massing.Massing} returns this
 */
proto.pulsar.massing.Massing.prototype.clearPolygonal = function() {
  return this.setPolygonal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.massing.Massing.prototype.hasPolygonal = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MassingType massing_type = 5;
 * @return {!proto.pulsar.massing.MassingType}
 */
proto.pulsar.massing.Massing.prototype.getMassingType = function() {
  return /** @type {!proto.pulsar.massing.MassingType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.pulsar.massing.MassingType} value
 * @return {!proto.pulsar.massing.Massing} returns this
 */
proto.pulsar.massing.Massing.prototype.setMassingType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional UsageType usage_type = 6;
 * @return {!proto.pulsar.massing.UsageType}
 */
proto.pulsar.massing.Massing.prototype.getUsageType = function() {
  return /** @type {!proto.pulsar.massing.UsageType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.pulsar.massing.UsageType} value
 * @return {!proto.pulsar.massing.Massing} returns this
 */
proto.pulsar.massing.Massing.prototype.setUsageType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string group_id = 7;
 * @return {string}
 */
proto.pulsar.massing.Massing.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.Massing} returns this
 */
proto.pulsar.massing.Massing.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint32 number_of_floors = 8;
 * @return {number}
 */
proto.pulsar.massing.Massing.prototype.getNumberOfFloors = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.massing.Massing} returns this
 */
proto.pulsar.massing.Massing.prototype.setNumberOfFloors = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional float floor_height = 9;
 * @return {number}
 */
proto.pulsar.massing.Massing.prototype.getFloorHeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.massing.Massing} returns this
 */
proto.pulsar.massing.Massing.prototype.setFloorHeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulsar.massing.SpineMassing.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.SpineMassing.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.SpineMassing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.SpineMassing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.SpineMassing.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsList: jspb.Message.toObjectList(msg.getPointsList(),
    proto.pulsar.massing.Point2D.toObject, includeInstance),
    corridorWidth: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    unitDepth: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.SpineMassing}
 */
proto.pulsar.massing.SpineMassing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.SpineMassing;
  return proto.pulsar.massing.SpineMassing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.SpineMassing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.SpineMassing}
 */
proto.pulsar.massing.SpineMassing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pulsar.massing.Point2D;
      reader.readMessage(value,proto.pulsar.massing.Point2D.deserializeBinaryFromReader);
      msg.addPoints(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCorridorWidth(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUnitDepth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.SpineMassing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.SpineMassing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.SpineMassing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.SpineMassing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pulsar.massing.Point2D.serializeBinaryToWriter
    );
  }
  f = message.getCorridorWidth();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getUnitDepth();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * repeated Point2D points = 1;
 * @return {!Array<!proto.pulsar.massing.Point2D>}
 */
proto.pulsar.massing.SpineMassing.prototype.getPointsList = function() {
  return /** @type{!Array<!proto.pulsar.massing.Point2D>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulsar.massing.Point2D, 1));
};


/**
 * @param {!Array<!proto.pulsar.massing.Point2D>} value
 * @return {!proto.pulsar.massing.SpineMassing} returns this
*/
proto.pulsar.massing.SpineMassing.prototype.setPointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pulsar.massing.Point2D=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulsar.massing.Point2D}
 */
proto.pulsar.massing.SpineMassing.prototype.addPoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pulsar.massing.Point2D, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulsar.massing.SpineMassing} returns this
 */
proto.pulsar.massing.SpineMassing.prototype.clearPointsList = function() {
  return this.setPointsList([]);
};


/**
 * optional float corridor_width = 2;
 * @return {number}
 */
proto.pulsar.massing.SpineMassing.prototype.getCorridorWidth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.massing.SpineMassing} returns this
 */
proto.pulsar.massing.SpineMassing.prototype.setCorridorWidth = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float unit_depth = 3;
 * @return {number}
 */
proto.pulsar.massing.SpineMassing.prototype.getUnitDepth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.massing.SpineMassing} returns this
 */
proto.pulsar.massing.SpineMassing.prototype.setUnitDepth = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulsar.massing.PolygonalMassing.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.PolygonalMassing.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.PolygonalMassing.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.PolygonalMassing} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.PolygonalMassing.toObject = function(includeInstance, msg) {
  var f, obj = {
    boundariesList: jspb.Message.toObjectList(msg.getBoundariesList(),
    proto.pulsar.massing.BoundaryPlane.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.PolygonalMassing}
 */
proto.pulsar.massing.PolygonalMassing.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.PolygonalMassing;
  return proto.pulsar.massing.PolygonalMassing.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.PolygonalMassing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.PolygonalMassing}
 */
proto.pulsar.massing.PolygonalMassing.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pulsar.massing.BoundaryPlane;
      reader.readMessage(value,proto.pulsar.massing.BoundaryPlane.deserializeBinaryFromReader);
      msg.addBoundaries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.PolygonalMassing.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.PolygonalMassing.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.PolygonalMassing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.PolygonalMassing.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBoundariesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pulsar.massing.BoundaryPlane.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BoundaryPlane boundaries = 1;
 * @return {!Array<!proto.pulsar.massing.BoundaryPlane>}
 */
proto.pulsar.massing.PolygonalMassing.prototype.getBoundariesList = function() {
  return /** @type{!Array<!proto.pulsar.massing.BoundaryPlane>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulsar.massing.BoundaryPlane, 1));
};


/**
 * @param {!Array<!proto.pulsar.massing.BoundaryPlane>} value
 * @return {!proto.pulsar.massing.PolygonalMassing} returns this
*/
proto.pulsar.massing.PolygonalMassing.prototype.setBoundariesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pulsar.massing.BoundaryPlane=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulsar.massing.BoundaryPlane}
 */
proto.pulsar.massing.PolygonalMassing.prototype.addBoundaries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pulsar.massing.BoundaryPlane, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulsar.massing.PolygonalMassing} returns this
 */
proto.pulsar.massing.PolygonalMassing.prototype.clearBoundariesList = function() {
  return this.setBoundariesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulsar.massing.BoundaryPlane.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.BoundaryPlane.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.BoundaryPlane.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.BoundaryPlane} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.BoundaryPlane.toObject = function(includeInstance, msg) {
  var f, obj = {
    boundaryList: jspb.Message.toObjectList(msg.getBoundaryList(),
    proto.pulsar.massing.Point2D.toObject, includeInstance),
    zOffset: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.BoundaryPlane}
 */
proto.pulsar.massing.BoundaryPlane.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.BoundaryPlane;
  return proto.pulsar.massing.BoundaryPlane.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.BoundaryPlane} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.BoundaryPlane}
 */
proto.pulsar.massing.BoundaryPlane.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pulsar.massing.Point2D;
      reader.readMessage(value,proto.pulsar.massing.Point2D.deserializeBinaryFromReader);
      msg.addBoundary(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.BoundaryPlane.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.BoundaryPlane.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.BoundaryPlane} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.BoundaryPlane.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBoundaryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pulsar.massing.Point2D.serializeBinaryToWriter
    );
  }
  f = message.getZOffset();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * repeated Point2D boundary = 1;
 * @return {!Array<!proto.pulsar.massing.Point2D>}
 */
proto.pulsar.massing.BoundaryPlane.prototype.getBoundaryList = function() {
  return /** @type{!Array<!proto.pulsar.massing.Point2D>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulsar.massing.Point2D, 1));
};


/**
 * @param {!Array<!proto.pulsar.massing.Point2D>} value
 * @return {!proto.pulsar.massing.BoundaryPlane} returns this
*/
proto.pulsar.massing.BoundaryPlane.prototype.setBoundaryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pulsar.massing.Point2D=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulsar.massing.Point2D}
 */
proto.pulsar.massing.BoundaryPlane.prototype.addBoundary = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pulsar.massing.Point2D, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulsar.massing.BoundaryPlane} returns this
 */
proto.pulsar.massing.BoundaryPlane.prototype.clearBoundaryList = function() {
  return this.setBoundaryList([]);
};


/**
 * optional float z_offset = 2;
 * @return {number}
 */
proto.pulsar.massing.BoundaryPlane.prototype.getZOffset = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.massing.BoundaryPlane} returns this
 */
proto.pulsar.massing.BoundaryPlane.prototype.setZOffset = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.CreateMassingConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.CreateMassingConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.CreateMassingConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.CreateMassingConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    configuration: (f = msg.getConfiguration()) && proto.pulsar.massing.MassingConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.CreateMassingConfigurationRequest}
 */
proto.pulsar.massing.CreateMassingConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.CreateMassingConfigurationRequest;
  return proto.pulsar.massing.CreateMassingConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.CreateMassingConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.CreateMassingConfigurationRequest}
 */
proto.pulsar.massing.CreateMassingConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pulsar.massing.MassingConfiguration;
      reader.readMessage(value,proto.pulsar.massing.MassingConfiguration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.CreateMassingConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.CreateMassingConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.CreateMassingConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.CreateMassingConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pulsar.massing.MassingConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional MassingConfiguration configuration = 1;
 * @return {?proto.pulsar.massing.MassingConfiguration}
 */
proto.pulsar.massing.CreateMassingConfigurationRequest.prototype.getConfiguration = function() {
  return /** @type{?proto.pulsar.massing.MassingConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.pulsar.massing.MassingConfiguration, 1));
};


/**
 * @param {?proto.pulsar.massing.MassingConfiguration|undefined} value
 * @return {!proto.pulsar.massing.CreateMassingConfigurationRequest} returns this
*/
proto.pulsar.massing.CreateMassingConfigurationRequest.prototype.setConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulsar.massing.CreateMassingConfigurationRequest} returns this
 */
proto.pulsar.massing.CreateMassingConfigurationRequest.prototype.clearConfiguration = function() {
  return this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.massing.CreateMassingConfigurationRequest.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.GetMassingConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.GetMassingConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.GetMassingConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.GetMassingConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.GetMassingConfigurationRequest}
 */
proto.pulsar.massing.GetMassingConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.GetMassingConfigurationRequest;
  return proto.pulsar.massing.GetMassingConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.GetMassingConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.GetMassingConfigurationRequest}
 */
proto.pulsar.massing.GetMassingConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.GetMassingConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.GetMassingConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.GetMassingConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.GetMassingConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pulsar.massing.GetMassingConfigurationRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.GetMassingConfigurationRequest} returns this
 */
proto.pulsar.massing.GetMassingConfigurationRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.UpdateMassingConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.UpdateMassingConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.UpdateMassingConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.UpdateMassingConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    configuration: (f = msg.getConfiguration()) && proto.pulsar.massing.MassingConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.UpdateMassingConfigurationRequest}
 */
proto.pulsar.massing.UpdateMassingConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.UpdateMassingConfigurationRequest;
  return proto.pulsar.massing.UpdateMassingConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.UpdateMassingConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.UpdateMassingConfigurationRequest}
 */
proto.pulsar.massing.UpdateMassingConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pulsar.massing.MassingConfiguration;
      reader.readMessage(value,proto.pulsar.massing.MassingConfiguration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.UpdateMassingConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.UpdateMassingConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.UpdateMassingConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.UpdateMassingConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pulsar.massing.MassingConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional MassingConfiguration configuration = 1;
 * @return {?proto.pulsar.massing.MassingConfiguration}
 */
proto.pulsar.massing.UpdateMassingConfigurationRequest.prototype.getConfiguration = function() {
  return /** @type{?proto.pulsar.massing.MassingConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.pulsar.massing.MassingConfiguration, 1));
};


/**
 * @param {?proto.pulsar.massing.MassingConfiguration|undefined} value
 * @return {!proto.pulsar.massing.UpdateMassingConfigurationRequest} returns this
*/
proto.pulsar.massing.UpdateMassingConfigurationRequest.prototype.setConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulsar.massing.UpdateMassingConfigurationRequest} returns this
 */
proto.pulsar.massing.UpdateMassingConfigurationRequest.prototype.clearConfiguration = function() {
  return this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.massing.UpdateMassingConfigurationRequest.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.DeleteMassingConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.DeleteMassingConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.DeleteMassingConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.DeleteMassingConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.DeleteMassingConfigurationRequest}
 */
proto.pulsar.massing.DeleteMassingConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.DeleteMassingConfigurationRequest;
  return proto.pulsar.massing.DeleteMassingConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.DeleteMassingConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.DeleteMassingConfigurationRequest}
 */
proto.pulsar.massing.DeleteMassingConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.DeleteMassingConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.DeleteMassingConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.DeleteMassingConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.DeleteMassingConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pulsar.massing.DeleteMassingConfigurationRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.DeleteMassingConfigurationRequest} returns this
 */
proto.pulsar.massing.DeleteMassingConfigurationRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.ListMassingConfigurationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.ListMassingConfigurationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.ListMassingConfigurationsRequest}
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.ListMassingConfigurationsRequest;
  return proto.pulsar.massing.ListMassingConfigurationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.ListMassingConfigurationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.ListMassingConfigurationsRequest}
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.ListMassingConfigurationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.ListMassingConfigurationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 page_size = 1;
 * @return {number}
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.massing.ListMassingConfigurationsRequest} returns this
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.massing.ListMassingConfigurationsRequest} returns this
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.prototype.clearPageSize = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.prototype.hasPageSize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string page_token = 2;
 * @return {string}
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.ListMassingConfigurationsRequest} returns this
 */
proto.pulsar.massing.ListMassingConfigurationsRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.ListMassingConfigurationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.ListMassingConfigurationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    configurationsList: jspb.Message.toObjectList(msg.getConfigurationsList(),
    proto.pulsar.massing.MassingConfiguration.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.ListMassingConfigurationsResponse}
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.ListMassingConfigurationsResponse;
  return proto.pulsar.massing.ListMassingConfigurationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.ListMassingConfigurationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.ListMassingConfigurationsResponse}
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pulsar.massing.MassingConfiguration;
      reader.readMessage(value,proto.pulsar.massing.MassingConfiguration.deserializeBinaryFromReader);
      msg.addConfigurations(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.ListMassingConfigurationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.ListMassingConfigurationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfigurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pulsar.massing.MassingConfiguration.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated MassingConfiguration configurations = 1;
 * @return {!Array<!proto.pulsar.massing.MassingConfiguration>}
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.prototype.getConfigurationsList = function() {
  return /** @type{!Array<!proto.pulsar.massing.MassingConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulsar.massing.MassingConfiguration, 1));
};


/**
 * @param {!Array<!proto.pulsar.massing.MassingConfiguration>} value
 * @return {!proto.pulsar.massing.ListMassingConfigurationsResponse} returns this
*/
proto.pulsar.massing.ListMassingConfigurationsResponse.prototype.setConfigurationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pulsar.massing.MassingConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulsar.massing.MassingConfiguration}
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.prototype.addConfigurations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pulsar.massing.MassingConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulsar.massing.ListMassingConfigurationsResponse} returns this
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.prototype.clearConfigurationsList = function() {
  return this.setConfigurationsList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.ListMassingConfigurationsResponse} returns this
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.massing.ListMassingConfigurationsResponse} returns this
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.prototype.clearNextPageToken = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.massing.ListMassingConfigurationsResponse.prototype.hasNextPageToken = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.CreateMassingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.CreateMassingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.CreateMassingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.CreateMassingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    massingConfigurationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    massing: (f = msg.getMassing()) && proto.pulsar.massing.Massing.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.CreateMassingRequest}
 */
proto.pulsar.massing.CreateMassingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.CreateMassingRequest;
  return proto.pulsar.massing.CreateMassingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.CreateMassingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.CreateMassingRequest}
 */
proto.pulsar.massing.CreateMassingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMassingConfigurationId(value);
      break;
    case 2:
      var value = new proto.pulsar.massing.Massing;
      reader.readMessage(value,proto.pulsar.massing.Massing.deserializeBinaryFromReader);
      msg.setMassing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.CreateMassingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.CreateMassingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.CreateMassingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.CreateMassingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMassingConfigurationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMassing();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pulsar.massing.Massing.serializeBinaryToWriter
    );
  }
};


/**
 * optional string massing_configuration_id = 1;
 * @return {string}
 */
proto.pulsar.massing.CreateMassingRequest.prototype.getMassingConfigurationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.CreateMassingRequest} returns this
 */
proto.pulsar.massing.CreateMassingRequest.prototype.setMassingConfigurationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Massing massing = 2;
 * @return {?proto.pulsar.massing.Massing}
 */
proto.pulsar.massing.CreateMassingRequest.prototype.getMassing = function() {
  return /** @type{?proto.pulsar.massing.Massing} */ (
    jspb.Message.getWrapperField(this, proto.pulsar.massing.Massing, 2));
};


/**
 * @param {?proto.pulsar.massing.Massing|undefined} value
 * @return {!proto.pulsar.massing.CreateMassingRequest} returns this
*/
proto.pulsar.massing.CreateMassingRequest.prototype.setMassing = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulsar.massing.CreateMassingRequest} returns this
 */
proto.pulsar.massing.CreateMassingRequest.prototype.clearMassing = function() {
  return this.setMassing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.massing.CreateMassingRequest.prototype.hasMassing = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.UpdateMassingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.UpdateMassingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.UpdateMassingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.UpdateMassingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    massing: (f = msg.getMassing()) && proto.pulsar.massing.Massing.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.UpdateMassingRequest}
 */
proto.pulsar.massing.UpdateMassingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.UpdateMassingRequest;
  return proto.pulsar.massing.UpdateMassingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.UpdateMassingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.UpdateMassingRequest}
 */
proto.pulsar.massing.UpdateMassingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pulsar.massing.Massing;
      reader.readMessage(value,proto.pulsar.massing.Massing.deserializeBinaryFromReader);
      msg.setMassing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.UpdateMassingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.UpdateMassingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.UpdateMassingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.UpdateMassingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMassing();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pulsar.massing.Massing.serializeBinaryToWriter
    );
  }
};


/**
 * optional Massing massing = 1;
 * @return {?proto.pulsar.massing.Massing}
 */
proto.pulsar.massing.UpdateMassingRequest.prototype.getMassing = function() {
  return /** @type{?proto.pulsar.massing.Massing} */ (
    jspb.Message.getWrapperField(this, proto.pulsar.massing.Massing, 1));
};


/**
 * @param {?proto.pulsar.massing.Massing|undefined} value
 * @return {!proto.pulsar.massing.UpdateMassingRequest} returns this
*/
proto.pulsar.massing.UpdateMassingRequest.prototype.setMassing = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulsar.massing.UpdateMassingRequest} returns this
 */
proto.pulsar.massing.UpdateMassingRequest.prototype.clearMassing = function() {
  return this.setMassing(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.massing.UpdateMassingRequest.prototype.hasMassing = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.massing.DeleteMassingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.massing.DeleteMassingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.massing.DeleteMassingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.DeleteMassingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.massing.DeleteMassingRequest}
 */
proto.pulsar.massing.DeleteMassingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.massing.DeleteMassingRequest;
  return proto.pulsar.massing.DeleteMassingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.massing.DeleteMassingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.massing.DeleteMassingRequest}
 */
proto.pulsar.massing.DeleteMassingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.massing.DeleteMassingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.massing.DeleteMassingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.massing.DeleteMassingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.massing.DeleteMassingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pulsar.massing.DeleteMassingRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.massing.DeleteMassingRequest} returns this
 */
proto.pulsar.massing.DeleteMassingRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.pulsar.massing.MassingType = {
  MASSING_TYPE_UNDEFINED: 0,
  TOWER: 1,
  PODIUM: 2,
  BASEMENT: 3
};

/**
 * @enum {number}
 */
proto.pulsar.massing.UsageType = {
  USAGE_TYPE_UNDEFINED: 0,
  RESIDENTIAL: 1,
  COMMERCIAL: 2,
  RETAIL: 3,
  COMMUNITY: 4,
  PARKING: 5,
  STORAGE: 6,
  BACK_OF_HOUSE: 7
};

goog.object.extend(exports, proto.pulsar.massing);
