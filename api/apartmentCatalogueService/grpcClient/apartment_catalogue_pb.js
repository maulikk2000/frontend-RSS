// source: apartment_catalogue.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var apartment_pb = require('./apartment_pb.js');
goog.object.extend(proto, apartment_pb);
goog.exportSymbol('proto.pulsar.apartment.AddApartmentConfigurationRequest', null, global);
goog.exportSymbol('proto.pulsar.apartment.ApartmentCatalogue', null, global);
goog.exportSymbol('proto.pulsar.apartment.CreateApartmentCatalogueRequest', null, global);
goog.exportSymbol('proto.pulsar.apartment.DeleteApartmentConfigurationRequest', null, global);
goog.exportSymbol('proto.pulsar.apartment.GetApartmentCatalogueRequest', null, global);
goog.exportSymbol('proto.pulsar.apartment.UpdateApartmentConfigurationRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.apartment.GetApartmentCatalogueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.apartment.GetApartmentCatalogueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.apartment.GetApartmentCatalogueRequest.displayName = 'proto.pulsar.apartment.GetApartmentCatalogueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.apartment.ApartmentCatalogue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulsar.apartment.ApartmentCatalogue.repeatedFields_, null);
};
goog.inherits(proto.pulsar.apartment.ApartmentCatalogue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.apartment.ApartmentCatalogue.displayName = 'proto.pulsar.apartment.ApartmentCatalogue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulsar.apartment.CreateApartmentCatalogueRequest.repeatedFields_, null);
};
goog.inherits(proto.pulsar.apartment.CreateApartmentCatalogueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.apartment.CreateApartmentCatalogueRequest.displayName = 'proto.pulsar.apartment.CreateApartmentCatalogueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.apartment.UpdateApartmentConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.apartment.UpdateApartmentConfigurationRequest.displayName = 'proto.pulsar.apartment.UpdateApartmentConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.apartment.AddApartmentConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.apartment.AddApartmentConfigurationRequest.displayName = 'proto.pulsar.apartment.AddApartmentConfigurationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.apartment.DeleteApartmentConfigurationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.apartment.DeleteApartmentConfigurationRequest.displayName = 'proto.pulsar.apartment.DeleteApartmentConfigurationRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.apartment.GetApartmentCatalogueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.apartment.GetApartmentCatalogueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.apartment.GetApartmentCatalogueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.GetApartmentCatalogueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.apartment.GetApartmentCatalogueRequest}
 */
proto.pulsar.apartment.GetApartmentCatalogueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.apartment.GetApartmentCatalogueRequest;
  return proto.pulsar.apartment.GetApartmentCatalogueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.apartment.GetApartmentCatalogueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.apartment.GetApartmentCatalogueRequest}
 */
proto.pulsar.apartment.GetApartmentCatalogueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.apartment.GetApartmentCatalogueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.apartment.GetApartmentCatalogueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.apartment.GetApartmentCatalogueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.GetApartmentCatalogueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pulsar.apartment.GetApartmentCatalogueRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.apartment.GetApartmentCatalogueRequest} returns this
 */
proto.pulsar.apartment.GetApartmentCatalogueRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulsar.apartment.ApartmentCatalogue.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.apartment.ApartmentCatalogue.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.apartment.ApartmentCatalogue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.apartment.ApartmentCatalogue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.ApartmentCatalogue.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    apartmentConfigurationsList: jspb.Message.toObjectList(msg.getApartmentConfigurationsList(),
    apartment_pb.ApartmentConfiguration.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.apartment.ApartmentCatalogue}
 */
proto.pulsar.apartment.ApartmentCatalogue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.apartment.ApartmentCatalogue;
  return proto.pulsar.apartment.ApartmentCatalogue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.apartment.ApartmentCatalogue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.apartment.ApartmentCatalogue}
 */
proto.pulsar.apartment.ApartmentCatalogue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new apartment_pb.ApartmentConfiguration;
      reader.readMessage(value,apartment_pb.ApartmentConfiguration.deserializeBinaryFromReader);
      msg.addApartmentConfigurations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.apartment.ApartmentCatalogue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.apartment.ApartmentCatalogue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.apartment.ApartmentCatalogue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.ApartmentCatalogue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApartmentConfigurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      apartment_pb.ApartmentConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pulsar.apartment.ApartmentCatalogue.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.apartment.ApartmentCatalogue} returns this
 */
proto.pulsar.apartment.ApartmentCatalogue.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ApartmentConfiguration apartment_configurations = 2;
 * @return {!Array<!proto.pulsar.apartment.ApartmentConfiguration>}
 */
proto.pulsar.apartment.ApartmentCatalogue.prototype.getApartmentConfigurationsList = function() {
  return /** @type{!Array<!proto.pulsar.apartment.ApartmentConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, apartment_pb.ApartmentConfiguration, 2));
};


/**
 * @param {!Array<!proto.pulsar.apartment.ApartmentConfiguration>} value
 * @return {!proto.pulsar.apartment.ApartmentCatalogue} returns this
*/
proto.pulsar.apartment.ApartmentCatalogue.prototype.setApartmentConfigurationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.pulsar.apartment.ApartmentConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulsar.apartment.ApartmentConfiguration}
 */
proto.pulsar.apartment.ApartmentCatalogue.prototype.addApartmentConfigurations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.pulsar.apartment.ApartmentConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulsar.apartment.ApartmentCatalogue} returns this
 */
proto.pulsar.apartment.ApartmentCatalogue.prototype.clearApartmentConfigurationsList = function() {
  return this.setApartmentConfigurationsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.apartment.CreateApartmentCatalogueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.apartment.CreateApartmentCatalogueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    apartmentConfigurationsList: jspb.Message.toObjectList(msg.getApartmentConfigurationsList(),
    apartment_pb.ApartmentConfiguration.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.apartment.CreateApartmentCatalogueRequest}
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.apartment.CreateApartmentCatalogueRequest;
  return proto.pulsar.apartment.CreateApartmentCatalogueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.apartment.CreateApartmentCatalogueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.apartment.CreateApartmentCatalogueRequest}
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new apartment_pb.ApartmentConfiguration;
      reader.readMessage(value,apartment_pb.ApartmentConfiguration.deserializeBinaryFromReader);
      msg.addApartmentConfigurations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.apartment.CreateApartmentCatalogueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.apartment.CreateApartmentCatalogueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApartmentConfigurationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      apartment_pb.ApartmentConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ApartmentConfiguration apartment_configurations = 1;
 * @return {!Array<!proto.pulsar.apartment.ApartmentConfiguration>}
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest.prototype.getApartmentConfigurationsList = function() {
  return /** @type{!Array<!proto.pulsar.apartment.ApartmentConfiguration>} */ (
    jspb.Message.getRepeatedWrapperField(this, apartment_pb.ApartmentConfiguration, 1));
};


/**
 * @param {!Array<!proto.pulsar.apartment.ApartmentConfiguration>} value
 * @return {!proto.pulsar.apartment.CreateApartmentCatalogueRequest} returns this
*/
proto.pulsar.apartment.CreateApartmentCatalogueRequest.prototype.setApartmentConfigurationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pulsar.apartment.ApartmentConfiguration=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulsar.apartment.ApartmentConfiguration}
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest.prototype.addApartmentConfigurations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pulsar.apartment.ApartmentConfiguration, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulsar.apartment.CreateApartmentCatalogueRequest} returns this
 */
proto.pulsar.apartment.CreateApartmentCatalogueRequest.prototype.clearApartmentConfigurationsList = function() {
  return this.setApartmentConfigurationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.apartment.UpdateApartmentConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.apartment.UpdateApartmentConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    apartmentConfiguration: (f = msg.getApartmentConfiguration()) && apartment_pb.ApartmentConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.apartment.UpdateApartmentConfigurationRequest}
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.apartment.UpdateApartmentConfigurationRequest;
  return proto.pulsar.apartment.UpdateApartmentConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.apartment.UpdateApartmentConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.apartment.UpdateApartmentConfigurationRequest}
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new apartment_pb.ApartmentConfiguration;
      reader.readMessage(value,apartment_pb.ApartmentConfiguration.deserializeBinaryFromReader);
      msg.setApartmentConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.apartment.UpdateApartmentConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.apartment.UpdateApartmentConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApartmentConfiguration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      apartment_pb.ApartmentConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.apartment.UpdateApartmentConfigurationRequest} returns this
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ApartmentConfiguration apartment_configuration = 2;
 * @return {?proto.pulsar.apartment.ApartmentConfiguration}
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.prototype.getApartmentConfiguration = function() {
  return /** @type{?proto.pulsar.apartment.ApartmentConfiguration} */ (
    jspb.Message.getWrapperField(this, apartment_pb.ApartmentConfiguration, 2));
};


/**
 * @param {?proto.pulsar.apartment.ApartmentConfiguration|undefined} value
 * @return {!proto.pulsar.apartment.UpdateApartmentConfigurationRequest} returns this
*/
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.prototype.setApartmentConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulsar.apartment.UpdateApartmentConfigurationRequest} returns this
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.prototype.clearApartmentConfiguration = function() {
  return this.setApartmentConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.apartment.UpdateApartmentConfigurationRequest.prototype.hasApartmentConfiguration = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.apartment.AddApartmentConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.apartment.AddApartmentConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    apartmentConfiguration: (f = msg.getApartmentConfiguration()) && apartment_pb.ApartmentConfiguration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.apartment.AddApartmentConfigurationRequest}
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.apartment.AddApartmentConfigurationRequest;
  return proto.pulsar.apartment.AddApartmentConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.apartment.AddApartmentConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.apartment.AddApartmentConfigurationRequest}
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new apartment_pb.ApartmentConfiguration;
      reader.readMessage(value,apartment_pb.ApartmentConfiguration.deserializeBinaryFromReader);
      msg.setApartmentConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.apartment.AddApartmentConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.apartment.AddApartmentConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApartmentConfiguration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      apartment_pb.ApartmentConfiguration.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.apartment.AddApartmentConfigurationRequest} returns this
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ApartmentConfiguration apartment_configuration = 2;
 * @return {?proto.pulsar.apartment.ApartmentConfiguration}
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.prototype.getApartmentConfiguration = function() {
  return /** @type{?proto.pulsar.apartment.ApartmentConfiguration} */ (
    jspb.Message.getWrapperField(this, apartment_pb.ApartmentConfiguration, 2));
};


/**
 * @param {?proto.pulsar.apartment.ApartmentConfiguration|undefined} value
 * @return {!proto.pulsar.apartment.AddApartmentConfigurationRequest} returns this
*/
proto.pulsar.apartment.AddApartmentConfigurationRequest.prototype.setApartmentConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pulsar.apartment.AddApartmentConfigurationRequest} returns this
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.prototype.clearApartmentConfiguration = function() {
  return this.setApartmentConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.apartment.AddApartmentConfigurationRequest.prototype.hasApartmentConfiguration = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.apartment.DeleteApartmentConfigurationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.apartment.DeleteApartmentConfigurationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    apartmentConfigurationId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.apartment.DeleteApartmentConfigurationRequest}
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.apartment.DeleteApartmentConfigurationRequest;
  return proto.pulsar.apartment.DeleteApartmentConfigurationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.apartment.DeleteApartmentConfigurationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.apartment.DeleteApartmentConfigurationRequest}
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApartmentConfigurationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.apartment.DeleteApartmentConfigurationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.apartment.DeleteApartmentConfigurationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApartmentConfigurationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.apartment.DeleteApartmentConfigurationRequest} returns this
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string apartment_configuration_id = 2;
 * @return {string}
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest.prototype.getApartmentConfigurationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.apartment.DeleteApartmentConfigurationRequest} returns this
 */
proto.pulsar.apartment.DeleteApartmentConfigurationRequest.prototype.setApartmentConfigurationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.pulsar.apartment);
